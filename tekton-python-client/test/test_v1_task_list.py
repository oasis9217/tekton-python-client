# Copyright 2021 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# coding: utf-8

"""
    Tekton

    Tekton Pipeline  # noqa: E501

    The version of the OpenAPI document: v0.49.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import tekton_pipeline
from tekton_pipeline.models.v1_task_list import V1TaskList  # noqa: E501
from tekton_pipeline.rest import ApiException

class TestV1TaskList(unittest.TestCase):
    """V1TaskList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1TaskList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = tekton_pipeline.models.v1_task_list.V1TaskList()  # noqa: E501
        if include_optional :
            return V1TaskList(
                api_version = '0', 
                items = [
                    tekton_pipeline.models.v1/task.v1.Task(
                        api_version = '0', 
                        kind = '0', 
                        metadata = None, 
                        spec = tekton_pipeline.models.v1/task_spec.v1.TaskSpec(
                            description = '0', 
                            display_name = '0', 
                            params = [
                                tekton_pipeline.models.v1/param_spec.v1.ParamSpec(
                                    default = tekton_pipeline.models.v1/param_value.v1.ParamValue(
                                        array_val = [
                                            '0'
                                            ], 
                                        object_val = {
                                            'key' : '0'
                                            }, 
                                        string_val = '0', 
                                        type = '0', ), 
                                    description = '0', 
                                    name = '0', 
                                    properties = {
                                        'key' : tekton_pipeline.models.v1/property_spec.v1.PropertySpec(
                                            type = '0', )
                                        }, 
                                    type = '0', )
                                ], 
                            results = [
                                tekton_pipeline.models.v1/task_result.v1.TaskResult(
                                    description = '0', 
                                    name = '0', 
                                    type = '0', )
                                ], 
                            sidecars = [
                                tekton_pipeline.models.v1/sidecar.v1.Sidecar(
                                    args = [
                                        '0'
                                        ], 
                                    command = [
                                        '0'
                                        ], 
                                    compute_resources = None, 
                                    env = [
                                        None
                                        ], 
                                    env_from = [
                                        None
                                        ], 
                                    image = '0', 
                                    image_pull_policy = '0', 
                                    lifecycle = None, 
                                    liveness_probe = None, 
                                    name = '0', 
                                    ports = [
                                        None
                                        ], 
                                    readiness_probe = None, 
                                    script = '0', 
                                    security_context = None, 
                                    startup_probe = None, 
                                    stdin = True, 
                                    stdin_once = True, 
                                    termination_message_path = '0', 
                                    termination_message_policy = '0', 
                                    tty = True, 
                                    volume_devices = [
                                        None
                                        ], 
                                    volume_mounts = [
                                        None
                                        ], 
                                    working_dir = '0', 
                                    workspaces = [
                                        tekton_pipeline.models.v1/workspace_usage.v1.WorkspaceUsage(
                                            mount_path = '0', 
                                            name = '0', )
                                        ], )
                                ], 
                            step_template = tekton_pipeline.models.v1/step_template.v1.StepTemplate(
                                compute_resources = None, 
                                image = '0', 
                                image_pull_policy = '0', 
                                security_context = None, 
                                working_dir = '0', ), 
                            steps = [
                                tekton_pipeline.models.v1/step.v1.Step(
                                    compute_resources = None, 
                                    image = '0', 
                                    image_pull_policy = '0', 
                                    name = '0', 
                                    on_error = '0', 
                                    script = '0', 
                                    security_context = None, 
                                    stderr_config = tekton_pipeline.models.v1/step_output_config.v1.StepOutputConfig(
                                        path = '0', ), 
                                    stdout_config = tekton_pipeline.models.v1/step_output_config.v1.StepOutputConfig(
                                        path = '0', ), 
                                    timeout = None, 
                                    working_dir = '0', )
                                ], 
                            volumes = [
                                None
                                ], 
                            workspaces = [
                                tekton_pipeline.models.v1/workspace_declaration.v1.WorkspaceDeclaration(
                                    description = '0', 
                                    mount_path = '0', 
                                    name = '0', 
                                    optional = True, 
                                    read_only = True, )
                                ], ), )
                    ], 
                kind = '0', 
                metadata = None
            )
        else :
            return V1TaskList(
                items = [
                    tekton_pipeline.models.v1/task.v1.Task(
                        api_version = '0', 
                        kind = '0', 
                        metadata = None, 
                        spec = tekton_pipeline.models.v1/task_spec.v1.TaskSpec(
                            description = '0', 
                            display_name = '0', 
                            params = [
                                tekton_pipeline.models.v1/param_spec.v1.ParamSpec(
                                    default = tekton_pipeline.models.v1/param_value.v1.ParamValue(
                                        array_val = [
                                            '0'
                                            ], 
                                        object_val = {
                                            'key' : '0'
                                            }, 
                                        string_val = '0', 
                                        type = '0', ), 
                                    description = '0', 
                                    name = '0', 
                                    properties = {
                                        'key' : tekton_pipeline.models.v1/property_spec.v1.PropertySpec(
                                            type = '0', )
                                        }, 
                                    type = '0', )
                                ], 
                            results = [
                                tekton_pipeline.models.v1/task_result.v1.TaskResult(
                                    description = '0', 
                                    name = '0', 
                                    type = '0', )
                                ], 
                            sidecars = [
                                tekton_pipeline.models.v1/sidecar.v1.Sidecar(
                                    args = [
                                        '0'
                                        ], 
                                    command = [
                                        '0'
                                        ], 
                                    compute_resources = None, 
                                    env = [
                                        None
                                        ], 
                                    env_from = [
                                        None
                                        ], 
                                    image = '0', 
                                    image_pull_policy = '0', 
                                    lifecycle = None, 
                                    liveness_probe = None, 
                                    name = '0', 
                                    ports = [
                                        None
                                        ], 
                                    readiness_probe = None, 
                                    script = '0', 
                                    security_context = None, 
                                    startup_probe = None, 
                                    stdin = True, 
                                    stdin_once = True, 
                                    termination_message_path = '0', 
                                    termination_message_policy = '0', 
                                    tty = True, 
                                    volume_devices = [
                                        None
                                        ], 
                                    volume_mounts = [
                                        None
                                        ], 
                                    working_dir = '0', 
                                    workspaces = [
                                        tekton_pipeline.models.v1/workspace_usage.v1.WorkspaceUsage(
                                            mount_path = '0', 
                                            name = '0', )
                                        ], )
                                ], 
                            step_template = tekton_pipeline.models.v1/step_template.v1.StepTemplate(
                                compute_resources = None, 
                                image = '0', 
                                image_pull_policy = '0', 
                                security_context = None, 
                                working_dir = '0', ), 
                            steps = [
                                tekton_pipeline.models.v1/step.v1.Step(
                                    compute_resources = None, 
                                    image = '0', 
                                    image_pull_policy = '0', 
                                    name = '0', 
                                    on_error = '0', 
                                    script = '0', 
                                    security_context = None, 
                                    stderr_config = tekton_pipeline.models.v1/step_output_config.v1.StepOutputConfig(
                                        path = '0', ), 
                                    stdout_config = tekton_pipeline.models.v1/step_output_config.v1.StepOutputConfig(
                                        path = '0', ), 
                                    timeout = None, 
                                    working_dir = '0', )
                                ], 
                            volumes = [
                                None
                                ], 
                            workspaces = [
                                tekton_pipeline.models.v1/workspace_declaration.v1.WorkspaceDeclaration(
                                    description = '0', 
                                    mount_path = '0', 
                                    name = '0', 
                                    optional = True, 
                                    read_only = True, )
                                ], ), )
                    ],
        )

    def testV1TaskList(self):
        """Test V1TaskList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
